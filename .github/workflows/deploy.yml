name: Deploy Laravel ke VPS

on:
  push:
    branches:
      - main

jobs:
  # test:
  #   runs-on: ubuntu-latest
    
  #   services:
  #     mysql:
  #       image: mysql:8.0
  #       env:
  #         MYSQL_DATABASE: jemberwonder_test
  #         MYSQL_ROOT_PASSWORD: root
  #         MYSQL_ALLOW_EMPTY_PASSWORD: no
  #       ports:
  #         - 3306:3306
  #       options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

  #   steps:
  #   - uses: actions/checkout@v2
    
  #   - name: Setup PHP
  #     uses: shivammathur/setup-php@v2
  #     with:
  #       php-version: '8.2'
  #       extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo
        
  #   - name: Copy .env.example
  #     run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      
  #   - name: Update Database Configuration
  #     run: |
  #       sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env
  #       sed -i 's/DB_PORT=.*/DB_PORT=3306/' .env
  #       sed -i 's/DB_DATABASE=.*/DB_DATABASE=jemberwonder_test/' .env
  #       sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env
  #       sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=root/' .env
      
  #   - name: Install Dependencies
  #     run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      
  #   - name: Generate key
  #     run: php artisan key:generate
      
  #   - name: Clear Config
  #     run: |
  #       php artisan config:clear
  #       php artisan cache:clear
        
  #   - name: Set up test database
  #     run: |
  #       php artisan migrate:fresh --force --seed
        
  #   - name: Run Tests
  #     run: php artisan test --env=testing

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Deploy ke VPS via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_IP }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          echo "📁 Masuk ke direktori proyek..."
          cd /var/www/devops
          
          echo "🔄 Mengkonfigurasi Git..."
          git config --global --add safe.directory /var/www/devops
          
          echo "🔄 Menarik update dari branch main..."
          git fetch origin
          git reset --hard origin/main
          
          echo "🧹 Menghentikan container lama..."
          docker compose down
          
          echo "⚙️ Membangun dan menjalankan ulang container..."
          docker compose up -d --build
          
          echo "⏳ Menunggu MySQL siap..."
          docker exec laravel-app sh -c '
            max_tries=30
            counter=0
            echo "Menunggu database siap..."
            until php -r "
              try {
                \$pdo = new PDO(
                  \"mysql:host=db;port=3306;dbname=jemberwonder\",
                  \"root\",
                  \"root\"
                );
                echo \"Database connection successful\\n\";
                exit(0);
              } catch (PDOException \$e) {
                echo \"Database connection failed: \" . \$e->getMessage() . \"\\n\";
                exit(1);
              }
            " || [ $counter -eq $max_tries ]; do
              echo "Mencoba koneksi ke database... ($counter/$max_tries)"
              sleep 2
              counter=$((counter+1))
            done
            
            if [ $counter -eq $max_tries ]; then
              echo "❌ Timeout menunggu database setelah $((max_tries * 2)) detik"
              exit 1
            fi
          '
          
          echo "📦 Menjalankan composer install..."
          docker exec -u www-data laravel-app composer install --no-interaction --prefer-dist --optimize-autoloader
          
          echo "🔐 Generate APP key..."
          docker exec -u www-data laravel-app php artisan key:generate --force
          
          echo "🧹 Membersihkan cache..."
          docker exec -u www-data laravel-app php artisan config:clear
          docker exec -u www-data laravel-app php artisan cache:clear
          
          echo "🗃️ Reset dan migrasi database..."
          docker exec -u www-data laravel-app php artisan migrate:fresh --force --seed
          
          echo "✅ Deploy selesai!"
